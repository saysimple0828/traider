[tool.poetry]
name = "reporter"
version = "0.1.0"
description = "e06dbf27"
authors = ["PDX-dev"]

[tool.poetry.dependencies]
python = "^3.13"
pydantic = "^1.10.2"
sqlmodel = "^0.0.8"
boto3 = "^1.26.162"
psycopg2-binary = "^2.9.6"
tqdm = "^4.65.0"
fastapi = "^0.101.1"
ruff = "^0.0.285"
uvicorn = "^0.23.2"
python-dotenv = "^1.0.0"
boto3-stubs = {extras = ["s3"], version = "^1.28.41"}
websockets = "^11.0.3"
minio = "^7.1.17"
mysqlclient = "^2.2.5"
alpaca-trade-api

[tool.poetry.dev-dependencies]
pytest = "^7.1.0"
pytest-cov = "^4.0.0"
black = {extras = ["jupyter"], version = "^22.6.0"}
isort = "^5.10.1"
mypy = "^1.5.1"
flake8 = "^4.0.1"
pre-commit = "^2.17.0"
flakeheaven = "^2.0.0"
wemake-python-styleguide = "^0.16.1"

[tool.poetry.group.dev.dependencies]
ipykernel = "^6.23.3"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
include = ["*.py"]
# Assume Python 3.10
target-version = "py310"
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "__pycache__",
]
# Same as Black.
line-length = 88
indent-width = 4

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = [
    # refurb
    "FURB",
    # Pylint
    "PL",
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # isort
    "I",
    # mccabe
    "C90",
]

ignore = [
    # undefined-local-with-import-star
    "F403",
    # undefined-local-with-import-star-usage
    "F405",
    # module-import-not-at-top-of-file
    "E402",
    # line-too-long
    "E501",
    # too-many-arguments
    "PLR0913",
    # magic-value-comparison
    "PLR2004",
    # too-many-positional
    "PLR0917",
    # no-self-use
    "PLR6301",
    # bad-dunder-method-name
    "PLW3201",
    # too-many-locals
    "PLR0914"
]

# Allow fix for all enabled rules (when `--fix`) is provided.

fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
[tool.ruff.format]
exclude = ["*.pyi"]

# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = true

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true
# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.ruff.lint.pydocstyle]
convention = "google"  # Accepts: "google", "numpy", or "pep257".

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10
